version: '3.6'
services:
#  front:
#    build: .
#    container_name: "front_dev"
#    ports:
#      - "8080:8080"
#    networks:
#      - question
#    restart: always
  postgres:
    image: postgres:12
    container_name: "postgres_hasura_dev"
    ports:
      - "5434:5432"
    volumes:
      - db_data_pg:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
    networks:
      - question
    restart: always
  hasura:
    image: hasura/graphql-engine:v1.3.3
    container_name: "hasura_dev"
    ports:
      - "9100:8080"
    depends_on:
      - "postgres"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432
      HASURA_GRAPHQL_ADMIN_SECRET: questionsecretkey
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"RS256","jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com","audience": "lightweight-back-office-dev","issuer": "https://securetoken.google.com/lightweight-back-office-dev" }'
    networks:
      - question
    restart: always
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    container_name: elasticsearch_dev
    ports:
      - "9200:9200"
    environment:
      - cluster.name=questions
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - db_data_elastic:/usr/share/elasticsearch/data
    networks:
      - question
    restart: always
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.1
    container_name: "kibana_dev"
    ports:
      - "9300:5601"
    environment:
      SERVER_NAME: questions
    networks:
      - question
    restart: always
volumes:
  db_data_pg:
  db_data_elastic:
networks:
  question: